# change 'placeholder' to your real informations

#config
spring.application.name=fuba
server.port=8080
server.servlet.context-path=/
spring.mvc.view.prefix=/templates/
spring.mvc.view.suffix=.html
#logging.level.org.thymeleaf=DEBUG

#static
spring.mvc.static-path-pattern=/**
server.error.whitelabel.enabled=false
server.error.path=/404

#jpa
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/ticketbooker
spring.datasource.username=placeholder
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# disable auto rename table
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

#email sender
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=placeholder
spring.mail.password=placeholder
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#OAuth2 Google
spring.security.oauth2.client.registration.google.client-id=placeholder
spring.security.oauth2.client.registration.google.client-secret=placeholder
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

#Oauth2 Facebook
spring.security.oauth2.client.registration.facebook.client-id=placeholder
spring.security.oauth2.client.registration.facebook.client-secret=placeholder
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.facebook.client-name=Facebook
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v12.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v12.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email,picture
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

#OAuth2 GitHub
spring.security.oauth2.client.registration.github.client-id=placeholder
spring.security.oauth2.client.registration.github.client-secret=placeholder
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

# VNPay Configuration
vnpay.tmnCode=placeholder
vnpay.hashSecret=placeholder
vnpay.url=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnpay.returnUrl=http://localhost:8080/vnpay-return

#ZaloPay
zalo.appId=placeholder
zalo.key1=placeholder
#zalo.key2=placeholder
zalo.createEndpoint=https://sb-openapi.zalopay.vn/v2/create
zalo.expireDuration=600
zalo.queryEndpoint=https://sb-openapi.zalopay.vn/v2/query

# OpenAI Configuration
openai.api.url=https://api.openai.com/v1/chat/completions
openai.api.key=placeholder
openai.model=gpt-4o-mini